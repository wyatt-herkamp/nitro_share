/*
 Generated by typeshare 1.7.0
*/

export interface BackendConfigurationReport {
  state: State
  session_config: SessionConfig
  site_rules: SiteRules
  image_rules: ImageRules
  paste_rules: PasteRules
  public_profiles: ProfileRules
}

export interface ImagePermissions {
  create: boolean
  /** Can view private images and delete images that are not owned by the user */
  admin: boolean
  /** Can view public images */
  view_public: boolean
}

export interface PastePermissions {
  create: boolean
  /** View and Delete Other Images */
  admin: boolean
  view_public: boolean
}

export interface UserPermissions {
  edit_user: boolean
  view_profile: boolean
  create_auth_token: boolean
}

export interface Permissions {
  image_permissions: ImagePermissions
  paste_permissions: PastePermissions
  user_permissions: UserPermissions
  admin: boolean
}

export interface SiteRules {
  allow_registration: boolean
  require_email_verification: boolean
  name: string
  max_payload: bigint
  anonymous_permissions: Permissions
}

export interface ProfileRules {
  show_without_login: boolean
}

export interface SessionConfig {
  cookie_name: string
  allow_in_header: boolean
  session_lifetime: string
}

export interface ImageRules {
  max_image_size: bigint
  show_without_login: boolean
}

export interface PasteRules {
  max_file_size: bigint
  max_paste_size?: bigint
  show_without_login: boolean
  allow_file_updates: boolean
  allow_post_creation_without_file: boolean
}

export interface State {
  first_user: boolean
  started_at: Date
}

export interface User {
  id: bigint
  name: string
  username: string
  email: string
  email_verified?: Date
  permissions: Permissions
  password_changed_at?: Date
  password_reset_required: boolean
  banned: boolean
  created: Date
}

/**
 * A session type.
 * Stored in the session manager.
 *
 * Redb converts this to a tuple of (user_id, session_id, expires, created)
 */
export interface Session {
  user_id: bigint
  session_id: string
  expires: Date
  created: Date
}

export interface LoginResponse {
  user: User
  session?: Session
}

export interface LoginRequest {
  username: string
  password: string
}

export interface RegisterRequest {
  username: string
  password: string
  email: string
}

/**
 * A file type
 *
 * mime_type: The mime type of the file
 * charset: The charset of the file
 * programming_language: The programming language of the file
 * content_language: The content language of the file
 */
export interface FileType {
  mime_type: string
  charset: string
  programming_language?: string
  content_language?: string
}

export interface PasteAndFileModel {
  id_str: string
  user_id: bigint
  name: string
  description?: string
  post_created: Date
  post_id: bigint
  file_id: bigint
  file_name: string
  file_type: FileType
  file_created: Date
}

export interface Paste {
  id: bigint
  id_str: string
  user_id: bigint
  name: string
  tags: string[]
  description: string
  last_updated: Date
  created: Date
  /** Not included in a response that does not include files */
  files: string[]
}

export interface UserProfile {
  id: bigint
  name: string
  username: string
  banned: boolean
  created: Date
}

export type CheckRequest =
  | {
      type: 'Email'
      content: {
        email: string
      }
    }
  | {
      type: 'Username'
      content: {
        username: string
      }
    }
